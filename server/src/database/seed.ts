import { PrismaClient } from '@prisma/client';
import bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  console.log('üë• –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
  
  const adminPassword = await bcrypt.hash('admin123', 12);
  const userPassword = await bcrypt.hash('user123', 12);

  const admin = await prisma.user.upsert({
    where: { email: 'admin@medical-aggregator.ru' },
    update: {},
    create: {
      name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –°–∏—Å—Ç–µ–º—ã',
      email: 'admin@medical-aggregator.ru',
      password: adminPassword,
      role: 'ADMIN',
    },
  });

  const doctor = await prisma.user.upsert({
    where: { email: 'doctor@medical-aggregator.ru' },
    update: {},
    create: {
      name: '–î–æ–∫—Ç–æ—Ä –ò–≤–∞–Ω–æ–≤',
      email: 'doctor@medical-aggregator.ru',
      password: userPassword,
      role: 'DOCTOR',
    },
  });

  const testUser = await prisma.user.upsert({
    where: { email: 'user@example.com' },
    update: {},
    create: {
      name: '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      email: 'user@example.com',
      password: userPassword,
      role: 'USER',
    },
  });

  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: Admin(${admin.id}), Doctor(${doctor.id}), User(${testUser.id})`);

  // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥ –ë–ê–î–æ–≤
  console.log('üíä –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥ –ë–ê–î–æ–≤...');

  const supplements = await Promise.all([
    prisma.supplement.upsert({
      where: { id: 'vitamin-d3-1000' },
      update: {},
      create: {
        id: 'vitamin-d3-1000',
        name: '–í–∏—Ç–∞–º–∏–Ω D3 1000 –ú–ï',
        price: 299.00,
        description: '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∑–¥–æ—Ä–æ–≤—å–µ –∫–æ—Å—Ç–µ–π –∏ –∏–º–º—É–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–∏ –¥–µ—Ñ–∏—Ü–∏—Ç–µ –≤–∏—Ç–∞–º–∏–Ω–∞ D. –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å: Now Foods. 120 –∫–∞–ø—Å—É–ª.',
        tags: ['–≤–∏—Ç–∞–º–∏–Ω d', '–∏–º–º—É–Ω–∏—Ç–µ—Ç', '–∫–æ—Å—Ç–∏', 'now foods'],
        inStock: true,
      },
    }),

    prisma.supplement.upsert({
      where: { id: 'omega-3-epa-dha' },
      update: {},
      create: {
        id: 'omega-3-epa-dha',
        name: '–û–º–µ–≥–∞-3 EPA/DHA 1000 –º–≥',
        price: 899.00,
        description: '–ü–æ–ª–∏–Ω–µ–Ω–∞—Å—ã—â–µ–Ω–Ω—ã–µ –∂–∏—Ä–Ω—ã–µ –∫–∏—Å–ª–æ—Ç—ã –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–¥—Ü–∞ –∏ –º–æ–∑–≥–∞. –í—ã—Å–æ–∫–∞—è –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è EPA (300 –º–≥) –∏ DHA (200 –º–≥). –û—á–∏—â–µ–Ω–Ω—ã–π —Ä—ã–±–∏–π –∂–∏—Ä.',
        tags: ['–æ–º–µ–≥–∞-3', '—Å–µ—Ä–¥—Ü–µ', '–º–æ–∑–≥', 'epa', 'dha'],
        inStock: true,
      },
    }),

    prisma.supplement.upsert({
      where: { id: 'magnesium-bisglycinate' },
      update: {},
      create: {
        id: 'magnesium-bisglycinate',
        name: '–ú–∞–≥–Ω–∏–π –ë–∏—Å–≥–ª–∏—Ü–∏–Ω–∞—Ç 200 –º–≥',
        price: 599.00,
        description: '–•–µ–ª–∞—Ç–Ω–∞—è —Ñ–æ—Ä–º–∞ –º–∞–≥–Ω–∏—è —Å –≤—ã—Å–æ–∫–æ–π –±–∏–æ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å—é. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–µ—Ä–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É, –º—ã—à—Ü—ã –∏ –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞. –ù–µ –≤—ã–∑—ã–≤–∞–µ—Ç —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏—è.',
        tags: ['–º–∞–≥–Ω–∏–π', '–Ω–µ—Ä–≤—ã', '–º—ã—à—Ü—ã', '—Å–æ–Ω', '—Å—Ç—Ä–µ—Å—Å'],
        inStock: true,
      },
    }),

    prisma.supplement.upsert({
      where: { id: 'probiotic-complex' },
      update: {},
      create: {
        id: 'probiotic-complex',
        name: '–ü—Ä–æ–±–∏–æ—Ç–∏–∫ –ö–æ–º–ø–ª–µ–∫—Å 50 –º–ª—Ä–¥ –ö–û–ï',
        price: 1299.00,
        description: '–ö–æ–º–ø–ª–µ–∫—Å –ø–æ–ª–µ–∑–Ω—ã—Ö –±–∞–∫—Ç–µ—Ä–∏–π –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –∫–∏—à–µ—á–Ω–∏–∫–∞. 10 —à—Ç–∞–º–º–æ–≤ –ª–∞–∫—Ç–æ–±–∞—Ü–∏–ª–ª –∏ –±–∏—Ñ–∏–¥–æ–±–∞–∫—Ç–µ—Ä–∏–π. 50 –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤ –ö–û–ï –Ω–∞ –∫–∞–ø—Å—É–ª—É.',
        tags: ['–ø—Ä–æ–±–∏–æ—Ç–∏–∫', '–ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏–µ', '–∫–∏—à–µ—á–Ω–∏–∫', '–ª–∞–∫—Ç–æ–±–∞—Ü–∏–ª–ª—ã'],
        inStock: true,
      },
    }),

    prisma.supplement.upsert({
      where: { id: 'coq10-ubiquinol' },
      update: {},
      create: {
        id: 'coq10-ubiquinol',
        name: '–ö–æ—ç–Ω–∑–∏–º Q10 –£–±–∏—Ö–∏–Ω–æ–ª 100 –º–≥',
        price: 1599.00,
        description: '–ú–æ—â–Ω—ã–π –∞–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç –¥–ª—è —ç–Ω–µ—Ä–≥–∏–∏ –∫–ª–µ—Ç–æ–∫ –∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–¥—Ü–∞. –ê–∫—Ç–∏–≤–Ω–∞—è —É–±–∏—Ö–∏–Ω–æ–ª —Ñ–æ—Ä–º–∞ —Å –≤—ã—Å–æ–∫–æ–π –±–∏–æ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å—é.',
        tags: ['q10', '—ç–Ω–µ—Ä–≥–∏—è', '–∞–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç', '—Å–µ—Ä–¥—Ü–µ', '—É–±–∏—Ö–∏–Ω–æ–ª'],
        inStock: true,
      },
    }),

    prisma.supplement.upsert({
      where: { id: 'vitamin-b-complex' },
      update: {},
      create: {
        id: 'vitamin-b-complex',
        name: '–í–∏—Ç–∞–º–∏–Ω B-–ö–æ–º–ø–ª–µ–∫—Å',
        price: 399.00,
        description: '–ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å –≤–∏—Ç–∞–º–∏–Ω–æ–≤ –≥—Ä—É–ø–ø—ã B –¥–ª—è —ç–Ω–µ—Ä–≥–∏–∏ –∏ –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã. –í–∫–ª—é—á–∞–µ—Ç B1, B2, B6, B12, —Ñ–æ–ª–∏–µ–≤—É—é –∫–∏—Å–ª–æ—Ç—É –∏ –±–∏–æ—Ç–∏–Ω.',
        tags: ['–≤–∏—Ç–∞–º–∏–Ω b', '—ç–Ω–µ—Ä–≥–∏—è', '–Ω–µ—Ä–≤—ã', '–º–µ—Ç–∞–±–æ–ª–∏–∑–º'],
        inStock: true,
      },
    }),

    prisma.supplement.upsert({
      where: { id: 'zinc-picolinate' },
      update: {},
      create: {
        id: 'zinc-picolinate',
        name: '–¶–∏–Ω–∫ –ü–∏–∫–æ–ª–∏–Ω–∞—Ç 25 –º–≥',
        price: 349.00,
        description: '–í—ã—Å–æ–∫–æ—É—Å–≤–æ—è–µ–º–∞—è —Ñ–æ—Ä–º–∞ —Ü–∏–Ω–∫–∞ –¥–ª—è –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å—è –∫–æ–∂–∏. –ü–∏–∫–æ–ª–∏–Ω–∞—Ç —Ü–∏–Ω–∫–∞ - –æ–¥–Ω–∞ –∏–∑ —Å–∞–º—ã—Ö –±–∏–æ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–æ—Ä–º.',
        tags: ['—Ü–∏–Ω–∫', '–∏–º–º—É–Ω–∏—Ç–µ—Ç', '–∫–æ–∂–∞', '–ø–∏–∫–æ–ª–∏–Ω–∞—Ç'],
        inStock: true,
      },
    }),

    prisma.supplement.upsert({
      where: { id: 'ashwagandha-extract' },
      update: {},
      create: {
        id: 'ashwagandha-extract',
        name: '–ê—à–≤–∞–≥–∞–Ω–¥–∞ –≠–∫—Å—Ç—Ä–∞–∫—Ç 500 –º–≥',
        price: 799.00,
        description: '–ê–¥–∞–ø—Ç–æ–≥–µ–Ω–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —Å—Ç—Ä–µ—Å—Å–∞ –∏ —É–ª—É—á—à–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏. –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–∫—Ç —Å 5% –≤–∏—Ç–∞–Ω–æ–ª–∏–¥–∞–º–∏.',
        tags: ['–∞—à–≤–∞–≥–∞–Ω–¥–∞', '—Å—Ç—Ä–µ—Å—Å', '–∞–¥–∞–ø—Ç–æ–≥–µ–Ω', '—ç–Ω–µ—Ä–≥–∏—è'],
        inStock: true,
      },
    }),
  ]);

  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ –ë–ê–î–æ–≤: ${supplements.length}`);

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∞–Ω–∫–µ—Ç—É
  console.log('üìã –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∞–Ω–∫–µ—Ç—É...');

  const testForm = await prisma.form.create({
    data: {
      userId: testUser.id,
      answers: {
        personalInfo: {
          age: 28,
          gender: 'female',
          weight: 65,
          height: 168,
          activityLevel: 'moderate',
        },
        medicalInfo: {
          chronicDiseases: ['–≥–∏–ø–æ—Ç–∏—Ä–µ–æ–∑'],
          currentMedications: ['L-—Ç–∏—Ä–æ–∫—Å–∏–Ω 75 –º–∫–≥'],
          allergies: ['–æ—Ä–µ—Ö–∏', '–º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã'],
          pregnancyLactation: false,
        },
        symptoms: {
          energyLevel: 2,
          sleepQuality: 3,
          stressLevel: 4,
          digestiveIssues: ['–≤–∑–¥—É—Ç–∏–µ', '–Ω–µ—Ä–µ–≥—É–ª—è—Ä–Ω—ã–π —Å—Ç—É–ª'],
          otherSymptoms: ['–≤—ã–ø–∞–¥–µ–Ω–∏–µ –≤–æ–ª–æ—Å', '—Å—É—Ö–æ—Å—Ç—å –∫–æ–∂–∏'],
        },
        lifestyle: {
          diet: 'omnivore',
          smokingAlcohol: {
            smoking: false,
            alcohol: 'occasional',
          },
          supplementHistory: ['–≤–∏—Ç–∞–º–∏–Ω D', '–∂–µ–ª–µ–∑–æ'],
        },
        goals: {
          healthGoals: ['–ø–æ–≤—ã—Å–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é', '—É–ª—É—á—à–∏—Ç—å –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏–µ', '—É–∫—Ä–µ–ø–∏—Ç—å –≤–æ–ª–æ—Å—ã'],
          budgetRange: 'medium',
          deliveryPreference: '–∫—É—Ä—å–µ—Ä',
        },
      },
    },
  });

  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∞–Ω–∫–µ—Ç–∞: ${testForm.id}`);

  // –°–æ–∑–¥–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∫–µ—Ç—ã
  console.log('ü§ñ –°–æ–∑–¥–∞–µ–º –ò–ò-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...');

  const recommendations = await Promise.all([
    prisma.recommendation.create({
      data: {
        formId: testForm.id,
        name: '–í–∏—Ç–∞–º–∏–Ω D3 1000 –ú–ï',
        dose: '1 –∫–∞–ø—Å—É–ª–∞ —É—Ç—Ä–æ–º –≤–æ –≤—Ä–µ–º—è –µ–¥—ã',
        duration: '3 –º–µ—Å—è—Ü–∞',
        description: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞ –∏ —ç–Ω–µ—Ä–≥–∏–∏, –æ—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–∏ –≥–∏–ø–æ—Ç–∏—Ä–µ–æ–∑–µ',
        confidence: 0.92,
      },
    }),

    prisma.recommendation.create({
      data: {
        formId: testForm.id,
        name: '–ü—Ä–æ–±–∏–æ—Ç–∏–∫ –ö–æ–º–ø–ª–µ–∫—Å 50 –º–ª—Ä–¥ –ö–û–ï',
        dose: '1 –∫–∞–ø—Å—É–ª–∞ —É—Ç—Ä–æ–º –Ω–∞—Ç–æ—â–∞–∫',
        duration: '2 –º–µ—Å—è—Ü–∞',
        description: '–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏—è –∏ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –ñ–ö–¢',
        confidence: 0.87,
      },
    }),

    prisma.recommendation.create({
      data: {
        formId: testForm.id,
        name: '–ú–∞–≥–Ω–∏–π –ë–∏—Å–≥–ª–∏—Ü–∏–Ω–∞—Ç 200 –º–≥',
        dose: '1 –∫–∞–ø—Å—É–ª–∞ –≤–µ—á–µ—Ä–æ–º –∑–∞ 30 –º–∏–Ω –¥–æ —Å–Ω–∞',
        duration: '1 –º–µ—Å—è—Ü',
        description: '–î–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è —Å—Ç—Ä–µ—Å—Å–∞ –∏ —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ —Å–Ω–∞',
        confidence: 0.84,
      },
    }),
  ]);

  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${recommendations.length}`);

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
  console.log('üõí –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑...');

  const testOrder = await prisma.order.create({
    data: {
      userId: testUser.id,
      items: [
        {
          supplementId: 'vitamin-d3-1000',
          name: '–í–∏—Ç–∞–º–∏–Ω D3 1000 –ú–ï',
          price: 299.00,
          quantity: 2,
        },
        {
          supplementId: 'probiotic-complex',
          name: '–ü—Ä–æ–±–∏–æ—Ç–∏–∫ –ö–æ–º–ø–ª–µ–∫—Å 50 –º–ª—Ä–¥ –ö–û–ï',
          price: 1299.00,
          quantity: 1,
        },
      ],
      totalPrice: 1897.00,
      deliveryInfo: {
        address: {
          city: '–ú–æ—Å–∫–≤–∞',
          street: '—É–ª. –¢–≤–µ—Ä—Å–∫–∞—è',
          building: '15',
          apartment: '45',
          postalCode: '125009',
        },
        phone: '+7 (999) 123-45-67',
        email: 'user@example.com',
        deliveryMethod: 'courier',
        comment: '–î–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ 18:00',
      },
      status: 'CONFIRMED',
    },
  });

  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –∑–∞–∫–∞–∑: ${testOrder.id}`);

  // –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  console.log('‚öôÔ∏è –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...');

  const settings = [
    { key: 'app_name', value: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä' },
    { key: 'app_version', value: '1.0.0' },
    { key: 'ai_model_version', value: 'gpt-4-turbo' },
    { key: 'max_file_size', value: '10485760' }, // 10MB
    { key: 'allowed_file_types', value: 'pdf,jpg,jpeg,png,doc,docx' },
    { key: 'min_order_amount', value: '500' },
    { key: 'delivery_price_courier', value: '300' },
    { key: 'delivery_price_post', value: '200' },
    { key: 'support_email', value: 'support@medical-aggregator.ru' },
    { key: 'support_phone', value: '+7 (800) 555-01-23' },
  ];

  for (const setting of settings) {
    await prisma.systemSettings.upsert({
      where: { key: setting.key },
      update: { value: setting.value },
      create: {
        key: setting.key,
        value: setting.value,
      },
    });
  }

  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫: ${settings.length}`);

  console.log('üéâ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
  console.log('\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
  console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 3 (1 –∞–¥–º–∏–Ω, 1 –¥–æ–∫—Ç–æ—Ä, 1 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)`);
  console.log(`üíä –ë–ê–î–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: ${supplements.length}`);
  console.log(`üìã –ê–Ω–∫–µ—Ç: 1`);
  console.log(`ü§ñ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${recommendations.length}`);
  console.log(`üõí –ó–∞–∫–∞–∑–æ–≤: 1`);
  console.log(`‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–µ–∫: ${settings.length}`);
  console.log('\nüîë –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:');
  console.log('   –ê–¥–º–∏–Ω: admin@medical-aggregator.ru / admin123');
  console.log('   –î–æ–∫—Ç–æ—Ä: doctor@medical-aggregator.ru / user123');
  console.log('   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: user@example.com / user123');
}

main()
  .catch((e) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  }); 