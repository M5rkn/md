import React, { useState } from 'react';
import { ChevronLeft, ChevronRight, FileText, User, Heart, Activity } from 'lucide-react';
import { useNavigate } from 'react-router-dom';
import toast from 'react-hot-toast';
import axios from 'axios';

const SurveyPage: React.FC = () => {
  const navigate = useNavigate();
  const [currentStep, setCurrentStep] = useState(1);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const totalSteps = 3;

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã —Å–æ–≥–ª–∞—Å–Ω–æ —á–µ–∫-–ª–∏—Å—Ç—É
  const [formData, setFormData] = useState({
    // –ü–£–ù–ö–¢ –ü–ï–†–í–´–ô - –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    firstName: '',
    lastName: '',
    middleName: '',
    phone: '',
    email: '',
    birthDate: '',
    age: '',
    gender: '',
    maritalStatus: '',
    hasChildren: '',
    childrenAge: '',
    height: '',
    weight: '',
    weightYearAgo: '',

    // –ü–£–ù–ö–¢ –í–¢–û–†–û–ô - –û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏
    country: '',
    city: '',
    activityLevel: '',
    workType: '',
    isStudent: false,
    wakeUpTime: '',
    sleepTime: '',
    sleepQuality: '',
    breakfast: '',
    mealsPerDay: '',
    mainMeal: '',
    mealIntervals: '',
    dinnerToSleep: '',
    emotionalState: [] as string[],
    stressLevel: '',
    alcoholSmoking: '',

    // –ü–£–ù–ö–¢ –¢–†–ï–¢–ò–ô - –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    familyMedicalHistory: '',
    personalMedicalHistory: '',
    chronicDiseases: '',
    surgeries: '',
    lactoseReaction: '',
    caseinReaction: '',
    glutenReaction: '',
    drugReaction: '',
    vaccineReaction: '',
    foodAllergy: '',
    seasonalAllergy: '',
    
    // –°–∏—Å—Ç–µ–º—ã –æ—Ä–≥–∞–Ω–∏–∑–º–∞
    nervousSystem: [] as string[],
    vision: [] as string[],
    entSystem: [] as string[],
    cardiovascular: [] as string[],
    gastrointestinal: [] as string[],
    genitourinary: [] as string[],
    skin: [] as string[],
    hair: [] as string[],
    nails: [] as string[],
    endocrine: [] as string[],
    musculoskeletal: [] as string[],
    
    // –ñ–µ–Ω—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã
    regularCycle: '',
    pmsSymptoms: '',
    oralContraceptives: '',
    pregnancies: '',
    births: '',
    miscarriages: '',
    gynecologicalDiseases: [] as string[],
    menopauseSymptoms: [] as string[],
    
    // –õ–µ–∫–∞—Ä—Å—Ç–≤–∞ –∏ –¥–æ–±–∞–≤–∫–∏
    medications: ''
  });

  const handleInputChange = (field: string, value: string | boolean) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleArrayChange = (field: string, value: string, checked: boolean) => {
    setFormData(prev => ({
      ...prev,
      [field]: checked 
        ? [...prev[field as keyof typeof prev] as string[], value]
        : (prev[field as keyof typeof prev] as string[]).filter(item => item !== value)
    }));
  };

  const nextStep = () => {
    if (currentStep < totalSteps) {
      setCurrentStep(currentStep + 1);
    }
  };

  const prevStep = () => {
    if (currentStep > 1) {
      setCurrentStep(currentStep - 1);
    }
  };

  const handleSubmit = async () => {
    setIsSubmitting(true);
    try {
      // console.log('üìù –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∫–µ—Ç—É:', formData);
      
      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';
      const token = localStorage.getItem('token');

      if (!token) {
        toast.error('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É');
        navigate('/auth');
        return;
      }

      const response = await axios.post(`${apiUrl}/forms/submit`, formData, {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        },
        timeout: 60000
      });

      // console.log('‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.data);

      if (response.data.success) {
        toast.success('–ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
        navigate('/consultations');
      } else {
        toast.error(response.data.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–Ω–∫–µ—Ç—ã');
      }
    } catch (error: any) {
      // console.error('üí• –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∫–µ—Ç—ã:', error);
      toast.error(error.response?.data?.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–Ω–∫–µ—Ç—ã');
    } finally {
      setIsSubmitting(false);
    }
  };

  const renderStepContent = () => {
    switch (currentStep) {
      case 1:
        return (
          <div className="space-y-6">
            <div className="text-center space-y-2">
              <User size={48} className="mx-auto text-primary-600" />
              <h2 className="text-2xl font-bold text-gray-900">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
              <p className="text-gray-600">–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ</p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ò–º—è *
                </label>
                <input
                  type="text"
                  value={formData.firstName}
                  onChange={(e) => handleInputChange('firstName', e.target.value)}
                  className="input-field"
                  required
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –§–∞–º–∏–ª–∏—è *
                </label>
                <input
                  type="text"
                  value={formData.lastName}
                  onChange={(e) => handleInputChange('lastName', e.target.value)}
                  className="input-field"
                  required
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –û—Ç—á–µ—Å—Ç–≤–æ
                </label>
                <input
                  type="text"
                  value={formData.middleName}
                  onChange={(e) => handleInputChange('middleName', e.target.value)}
                  className="input-field"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ *
                </label>
                <input
                  type="tel"
                  value={formData.phone}
                  onChange={(e) => handleInputChange('phone', e.target.value)}
                  className="input-field"
                  placeholder="+7 (999) 123-45-67"
                  required
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Email *
                </label>
                <input
                  type="email"
                  value={formData.email}
                  onChange={(e) => handleInputChange('email', e.target.value)}
                  className="input-field"
                  required
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è *
                </label>
                <input
                  type="date"
                  value={formData.birthDate}
                  onChange={(e) => handleInputChange('birthDate', e.target.value)}
                  className="input-field"
                  required
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ü–æ–ª *
                </label>
                <select
                  value={formData.gender}
                  onChange={(e) => handleInputChange('gender', e.target.value)}
                  className="input-field"
                  required
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª</option>
                  <option value="male">–ú—É–∂—Å–∫–æ–π</option>
                  <option value="female">–ñ–µ–Ω—Å–∫–∏–π</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
                </label>
                <select
                  value={formData.maritalStatus}
                  onChange={(e) => handleInputChange('maritalStatus', e.target.value)}
                  className="input-field"
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å</option>
                  <option value="married">–ñ–µ–Ω–∞—Ç/–ó–∞–º—É–∂–µ–º</option>
                  <option value="single">–•–æ–ª–æ—Å—Ç/–ù–µ –∑–∞–º—É–∂–µ–º</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ï—Å—Ç—å –ª–∏ –¥–µ—Ç–∏?
                </label>
                <select
                  value={formData.hasChildren}
                  onChange={(e) => handleInputChange('hasChildren', e.target.value)}
                  className="input-field"
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç</option>
                  <option value="yes">–î–∞</option>
                  <option value="no">–ù–µ—Ç</option>
                </select>
              </div>

              {formData.hasChildren === 'yes' && (
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –í–æ–∑—Ä–∞—Å—Ç –¥–µ—Ç–µ–π
                  </label>
                  <input
                    type="text"
                    value={formData.childrenAge}
                    onChange={(e) => handleInputChange('childrenAge', e.target.value)}
                    className="input-field"
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 5, 12 –ª–µ—Ç"
                  />
                </div>
              )}

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –†–æ—Å—Ç (—Å–º) *
                </label>
                <input
                  type="number"
                  value={formData.height}
                  onChange={(e) => handleInputChange('height', e.target.value)}
                  className="input-field"
                  placeholder="170"
                  required
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –í–µ—Å (–∫–≥) *
                </label>
                <input
                  type="number"
                  value={formData.weight}
                  onChange={(e) => handleInputChange('weight', e.target.value)}
                  className="input-field"
                  placeholder="70"
                  required
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –í–µ—Å –≥–æ–¥ –Ω–∞–∑–∞–¥ (–∫–≥)
                </label>
                <input
                  type="number"
                  value={formData.weightYearAgo}
                  onChange={(e) => handleInputChange('weightYearAgo', e.target.value)}
                  className="input-field"
                  placeholder="75"
                />
              </div>
            </div>
          </div>
        );

      case 2:
        return (
          <div className="space-y-6">
            <div className="text-center space-y-2">
              <Activity size={48} className="mx-auto text-primary-600" />
              <h2 className="text-2xl font-bold text-gray-900">–û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏</h2>
              <p className="text-gray-600">–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –æ–±—Ä–∞–∑–µ –∂–∏–∑–Ω–∏</p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è
                </label>
                      <input
                  type="text"
                  value={formData.country}
                  onChange={(e) => handleInputChange('country', e.target.value)}
                  className="input-field"
                  placeholder="–†–æ—Å—Å–∏—è"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ì–æ—Ä–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è
                    </label>
                      <input
                  type="text"
                  value={formData.city}
                  onChange={(e) => handleInputChange('city', e.target.value)}
                  className="input-field"
                  placeholder="–ú–æ—Å–∫–≤–∞"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ –∏ —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ *
                </label>
                <select
                  value={formData.activityLevel}
                  onChange={(e) => handleInputChange('activityLevel', e.target.value)}
                  className="input-field"
                  required
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</option>
                  <option value="high">–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (—Ñ–∏–∑–∏—á–µ—Å–∫–∏–π —Å–ø–æ—Ä—Ç –æ—Ç 3-—Ö —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é)</option>
                  <option value="medium">–°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–±—ã—Ç–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, —Ä–∞–±–æ—Ç–∞ –ø–æ –¥–æ–º—É)</option>
                  <option value="low">–ù–∏–∑–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (—Å–∏–¥—è—á–∏–π, –º–∞–ª–æ–ø–æ–¥–≤–∏–∂–Ω—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏)</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –•–∞—Ä–∞–∫—Ç–µ—Ä —Ä–∞–±–æ—Ç—ã *
                </label>
                <select
                  value={formData.workType}
                  onChange={(e) => handleInputChange('workType', e.target.value)}
                  className="input-field"
                  required
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞–±–æ—Ç—ã</option>
                  <option value="office">–û—Ñ–∏—Å–Ω–∞—è, —Å–∏–¥—è—á–∞—è —Ä–∞–±–æ—Ç–∞</option>
                  <option value="physical">–§–∏–∑–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞, —Ä—É—á–Ω–∞—è</option>
                  <option value="heavy">–†–∞–±–æ—Ç–∞, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –ø–æ–¥—ä—ë–º–∞–º–∏ —Ç—è–∂–µ—Å—Ç–∏</option>
                  <option value="student">–£—á—ë–±–∞</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –í—Ä–µ–º—è –ø–æ–¥—ä—ë–º–∞
                </label>
                <input
                  type="time"
                  value={formData.wakeUpTime}
                  onChange={(e) => handleInputChange('wakeUpTime', e.target.value)}
                  className="input-field"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –í—Ä–µ–º—è –æ—Ç–±–æ—è
                </label>
                <input
                  type="time"
                  value={formData.sleepTime}
                  onChange={(e) => handleInputChange('sleepTime', e.target.value)}
                  className="input-field"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ö–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞
                </label>
                <select
                  value={formData.sleepQuality}
                  onChange={(e) => handleInputChange('sleepQuality', e.target.value)}
                  className="input-field"
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞</option>
                  <option value="good">–•–æ—Ä–æ—à–µ–µ, –Ω–µ –ø—Ä–æ—Å—ã–ø–∞—é—Å—å –Ω–æ—á—å—é</option>
                  <option value="bad">–ü–ª–æ—Ö–æ –∑–∞—Å—ã–ø–∞—é –∏ —Ç—Ä—É–¥–Ω–æ –ø—Ä–æ—Å—ã–ø–∞—é—Å—å —É—Ç—Ä–æ–º</option>
                  <option value="frequent">–ß–∞—Å—Ç–æ –ø—Ä–æ—Å—ã–ø–∞—é—Å—å —Å –ø–æ–∑—ã–≤–∞–º–∏ –≤ —Ç—É–∞–ª–µ—Ç</option>
                  <option value="superficial">–°–æ–Ω –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—ã–π, —Ç—Ä–µ–≤–æ–∂–Ω—ã–π</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ó–∞–≤—Ç—Ä–∞–∫ (—Å 6 –¥–æ 10 —É—Ç—Ä–∞)
                </label>
                <select
                  value={formData.breakfast}
                  onChange={(e) => handleInputChange('breakfast', e.target.value)}
                  className="input-field"
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç</option>
                  <option value="always">–ï–°–¢–¨</option>
                  <option value="never">–ù–ï–¢</option>
                  <option value="sometimes">–ù–ï –í–°–ï–ì–î–ê</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å –≤—ã –µ–¥–∏—Ç–µ, –≤–∫–ª—é—á–∞—è –ø–µ—Ä–µ–∫—É—Å—ã?
                </label>
                <input
                  type="number"
                  value={formData.mealsPerDay}
                  onChange={(e) => handleInputChange('mealsPerDay', e.target.value)}
                  className="input-field"
                  placeholder="3"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ë–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∏—â–∏ –≤—ã —Å—ä–µ–¥–∞–µ—Ç–µ –≤
                </label>
                <select
                  value={formData.mainMeal}
                  onChange={(e) => handleInputChange('mainMeal', e.target.value)}
                  className="input-field"
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–∏–µ–º –ø–∏—â–∏</option>
                  <option value="breakfast">–ó–ê–í–¢–†–ê–ö</option>
                  <option value="lunch">–û–ë–ï–î</option>
                  <option value="dinner">–£–ñ–ò–ù</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã –º–µ–∂–¥—É –ø—Ä–∏—ë–º–∞–º–∏ –ø–∏—â–∏ –º–æ–≥—É—Ç –¥–æ—Å—Ç–∏–≥–∞—Ç—å (—á–∞—Å–æ–≤)
                </label>
                <input
                  type="number"
                  value={formData.mealIntervals}
                  onChange={(e) => handleInputChange('mealIntervals', e.target.value)}
                  className="input-field"
                  placeholder="4"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –í—Ä–µ–º—è –º–µ–∂–¥—É –æ–∫–æ–Ω—á–∞–Ω–∏–µ–º —É–∂–∏–Ω–∞ –∏ –æ—Ç—Ö–æ–¥–æ–º –∫–æ —Å–Ω—É (—á–∞—Å–æ–≤)
                </label>
                <input
                  type="number"
                  value={formData.dinnerToSleep}
                  onChange={(e) => handleInputChange('dinnerToSleep', e.target.value)}
                  className="input-field"
                  placeholder="3"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –£—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞
                </label>
                <select
                  value={formData.stressLevel}
                  onChange={(e) => handleInputChange('stressLevel', e.target.value)}
                  className="input-field"
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞</option>
                  <option value="low">–ù–∏–∑–∫–∏–π</option>
                  <option value="moderate">–£–º–µ—Ä–µ–Ω–Ω—ã–π</option>
                  <option value="medium">–°—Ä–µ–¥–Ω–∏–π</option>
                  <option value="high">–í—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ</option>
                  <option value="very_high">–í—ã—Å–æ–∫–∏–π</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –∞–ª–∫–æ–≥–æ–ª—é –∏ —Ç–∞–±–∞–∫–æ–∫—É—Ä–µ–Ω–∏—é
                </label>
                <select
                  value={formData.alcoholSmoking}
                  onChange={(e) => handleInputChange('alcoholSmoking', e.target.value)}
                  className="input-field"
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ</option>
                  <option value="abuse">–ó–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª—è—é</option>
                  <option value="moderate">–£–ø–æ—Ç—Ä–µ–±–ª—è—é —É–º–µ—Ä–µ–Ω–Ω–æ</option>
                  <option value="occasional">–£–ø–æ—Ç—Ä–µ–±–ª—è—é –ø–æ —Å–ª—É—á–∞—é</option>
                  <option value="smoking">–ö—É—Ä—é (–≤–µ–π–ø, —Å–∏–≥–∞—Ä–µ—Ç—ã, –∫–∞–ª—å—è–Ω)</option>
                  <option value="none">–ù–µ —É–ø–æ—Ç—Ä–µ–±–ª—è—é —Å–ø–∏—Ä—Ç–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ –∏ –Ω–µ –∫—É—Ä—é</option>
                </select>
              </div>
            </div>

            {/* –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-3">
                –û–±—â–µ–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–≤—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã)
              </label>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                {[
                  '–ú–µ–Ω—è –≤—Å—ë —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç',
                  '–ß–∞—Å—Ç–∞—è —Å–º–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ –≤—Å–ø–ª–µ—Å–∫–∏ —ç–º–æ—Ü–∏–π',
                  '–ß–∞—Å—Ç–∞—è –∞–≥—Ä–µ—Å—Å–∏—è, —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å –±–µ–∑ –ø—Ä–∏—á–∏–Ω',
                  '–î–µ–ø—Ä–µ—Å—Å–∏—è',
                  '–ü–∞–Ω–∏—á–µ—Å–∫–∏–µ –∞—Ç–∞–∫–∏',
                  '–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –≤–æ–∑–±—É–¥–∏–º–æ—Å—Ç—å (–ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è, –ø—Ä–∏—Ö–æ–¥—è—â–∞—è)',
                  '–§–∏–∑–∏—á–µ—Å–∫–∏–µ –∏ —É–º—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Ç—Ä–µ–±—É—é—Ç —ç–Ω–µ—Ä–≥–∏–∏ (–Ω–∞—Ä—É—à–µ–Ω–∏–µ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ –≤–Ω–∏–º–∞–Ω–∏—è –∏ –ø–∞–º—è—Ç–∏)',
                  '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏ –∏–ª–∏ —á—É–≤—Å—Ç–≤–æ —É—Å—Ç–∞–ª–æ—Å—Ç–∏',
                  '–ß—É–≤—Å—Ç–≤–æ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–∞'
                ].map((option) => (
                  <label key={option} className="flex items-center space-x-3">
                    <input
                      type="checkbox"
                      checked={formData.emotionalState.includes(option)}
                      onChange={(e) => handleArrayChange('emotionalState', option, e.target.checked)}
                      className="rounded border-gray-300 text-primary-600 focus:ring-primary-500"
                    />
                    <span className="text-sm text-gray-700">{option}</span>
                  </label>
                ))}
              </div>
            </div>
          </div>
        );

      case 3:
        return (
          <div className="space-y-6">
            <div className="text-center space-y-2">
              <Heart size={48} className="mx-auto text-primary-600" />
              <h2 className="text-2xl font-bold text-gray-900">–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
              <p className="text-gray-600">–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –∑–¥–æ—Ä–æ–≤—å–µ</p>
            </div>

            <div className="space-y-6">
              {/* –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è —Å–µ–º—å–∏ */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è —Å–µ–º—å–∏ (–∫—Ä–æ–≤–Ω—ã–µ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏)
                </label>
                <textarea
                  value={formData.familyMedicalHistory}
                  onChange={(e) => handleInputChange('familyMedicalHistory', e.target.value)}
                  className="input-field"
                  rows={3}
                  placeholder="–ï—Å—Ç—å –ª–∏ —É —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –ñ–ö–¢, —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç—ã–µ, —ç–Ω–¥–æ–∫—Ä–∏–Ω–Ω—ã–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è, –æ–Ω–∫–æ–ª–æ–≥–∏—è –∏ —Ç.–ø."
                />
              </div>

              {/* –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è: —Å–æ—Å—Ç–æ—è–Ω–∏—è, –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∏ —Ç—Ä–∞–≤–º—ã
                </label>
                <textarea
                  value={formData.personalMedicalHistory}
                  onChange={(e) => handleInputChange('personalMedicalHistory', e.target.value)}
                  className="input-field"
                  rows={3}
                  placeholder="–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∏ —Ç—Ä–∞–≤–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–º–µ—á–∞–ª–∏—Å—å —É –≤–∞—Å –∫–æ–≥–¥–∞-–ª–∏–±–æ –≤ –ø—Ä–æ—à–ª–æ–º"
                />
              </div>

              {/* –•—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –•—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è
                </label>
                <textarea
                  value={formData.chronicDiseases}
                  onChange={(e) => handleInputChange('chronicDiseases', e.target.value)}
                  className="input-field"
                  rows={2}
                  placeholder="–ö–∞–∫–∏–µ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è —É –≤–∞—Å –µ—Å—Ç—å?"
                />
              </div>

              {/* –û–ø–µ—Ä–∞—Ü–∏–∏ */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –û–ø–µ—Ä–∞—Ü–∏–∏ –∏–ª–∏ –º–∞–ª–æ–∏–Ω–≤–∞–∑–∏–≤–Ω—ã–µ —Ö–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–∏–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞
                </label>
                <textarea
                  value={formData.surgeries}
                  onChange={(e) => handleInputChange('surgeries', e.target.value)}
                  className="input-field"
                  rows={2}
                  placeholder="–ö–∞–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –±—ã–ª–∏ —É –≤–∞—Å?"
                />
              </div>

              {/* –ê–ª–ª–µ—Ä–≥–∏–∏ */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –†–µ–∞–∫—Ü–∏—è –Ω–∞ –ª–∞–∫—Ç–æ–∑—É
                  </label>
                  <select
                    value={formData.lactoseReaction}
                    onChange={(e) => handleInputChange('lactoseReaction', e.target.value)}
                    className="input-field"
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç</option>
                    <option value="yes">–ï—Å—Ç—å —Ä–µ–∞–∫—Ü–∏—è</option>
                    <option value="no">–ù–µ—Ç —Ä–µ–∞–∫—Ü–∏–∏</option>
                    <option value="unknown">–ù–µ –∑–Ω–∞—é</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–∞–∑–µ–∏–Ω
                  </label>
                  <select
                    value={formData.caseinReaction}
                    onChange={(e) => handleInputChange('caseinReaction', e.target.value)}
                    className="input-field"
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç</option>
                    <option value="yes">–ï—Å—Ç—å —Ä–µ–∞–∫—Ü–∏—è</option>
                    <option value="no">–ù–µ—Ç —Ä–µ–∞–∫—Ü–∏–∏</option>
                    <option value="unknown">–ù–µ –∑–Ω–∞—é</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –†–µ–∞–∫—Ü–∏—è –Ω–∞ –≥–ª—é—Ç–µ–Ω
                  </label>
                  <select
                    value={formData.glutenReaction}
                    onChange={(e) => handleInputChange('glutenReaction', e.target.value)}
                    className="input-field"
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç</option>
                    <option value="yes">–ï—Å—Ç—å —Ä–µ–∞–∫—Ü–∏—è</option>
                    <option value="no">–ù–µ—Ç —Ä–µ–∞–∫—Ü–∏–∏</option>
                    <option value="unknown">–ù–µ –∑–Ω–∞—é</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –†–µ–∞–∫—Ü–∏—è –Ω–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã
                  </label>
                  <select
                    value={formData.drugReaction}
                    onChange={(e) => handleInputChange('drugReaction', e.target.value)}
                    className="input-field"
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç</option>
                    <option value="yes">–ï—Å—Ç—å —Ä–µ–∞–∫—Ü–∏—è</option>
                    <option value="no">–ù–µ—Ç —Ä–µ–∞–∫—Ü–∏–∏</option>
                    <option value="unknown">–ù–µ –∑–Ω–∞—é</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –†–µ–∞–∫—Ü–∏—è –Ω–∞ –≤–∞–∫—Ü–∏–Ω—ã
                  </label>
                  <select
                    value={formData.vaccineReaction}
                    onChange={(e) => handleInputChange('vaccineReaction', e.target.value)}
                    className="input-field"
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç</option>
                    <option value="yes">–ï—Å—Ç—å —Ä–µ–∞–∫—Ü–∏—è</option>
                    <option value="no">–ù–µ—Ç —Ä–µ–∞–∫—Ü–∏–∏</option>
                    <option value="unknown">–ù–µ –∑–Ω–∞—é</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ü–∏—â–µ–≤–∞—è –∞–ª–ª–µ—Ä–≥–∏—è
                  </label>
                      <input
                    type="text"
                    value={formData.foodAllergy}
                    onChange={(e) => handleInputChange('foodAllergy', e.target.value)}
                    className="input-field"
                    placeholder="–ù–∞ —á—Ç–æ –∞–ª–ª–µ—Ä–≥–∏—è?"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –°–µ–∑–æ–Ω–Ω–∞—è –∞–ª–ª–µ—Ä–≥–∏—è
                    </label>
                  <input
                    type="text"
                    value={formData.seasonalAllergy}
                    onChange={(e) => handleInputChange('seasonalAllergy', e.target.value)}
                    className="input-field"
                    placeholder="–ù–∞ —á—Ç–æ –∞–ª–ª–µ—Ä–≥–∏—è?"
                  />
                </div>
              </div>

              {/* –ñ–µ–Ω—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã */}
              {formData.gender === 'female' && (
                <div className="bg-pink-50 p-4 rounded-lg space-y-4">
                  <h3 className="font-semibold text-gray-900">–ñ–µ–Ω—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        –†–µ–≥—É–ª—è—Ä–Ω—ã–π –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω—ã–π —Ü–∏–∫–ª
                      </label>
                      <select
                        value={formData.regularCycle}
                        onChange={(e) => handleInputChange('regularCycle', e.target.value)}
                        className="input-field"
                      >
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç</option>
                        <option value="yes">–î–ê</option>
                        <option value="no">–ù–ï–¢</option>
                      </select>
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        –°–∏–º–ø—Ç–æ–º—ã –ü–ú–°
                      </label>
                      <input
                        type="text"
                        value={formData.pmsSymptoms}
                        onChange={(e) => handleInputChange('pmsSymptoms', e.target.value)}
                        className="input-field"
                        placeholder="–ö–∞–∫–∏–µ —Å–∏–º–ø—Ç–æ–º—ã?"
                      />
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        –ü—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –æ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞—Ü–µ–ø—Ç–∏–≤—ã
                      </label>
                <select
                        value={formData.oralContraceptives}
                        onChange={(e) => handleInputChange('oralContraceptives', e.target.value)}
                  className="input-field"
                      >
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç</option>
                        <option value="yes">–î–ê</option>
                        <option value="no">–ù–ï–¢</option>
                </select>
              </div>

                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–µ–π
                      </label>
                      <input
                        type="number"
                        value={formData.pregnancies}
                        onChange={(e) => handleInputChange('pregnancies', e.target.value)}
                        className="input-field"
                        placeholder="0"
                      />
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–¥–æ–≤
                      </label>
                      <input
                        type="number"
                        value={formData.births}
                        onChange={(e) => handleInputChange('births', e.target.value)}
                        className="input-field"
                        placeholder="0"
                      />
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–∫–∏–¥—ã—à–µ–π
                      </label>
                      <input
                        type="number"
                        value={formData.miscarriages}
                        onChange={(e) => handleInputChange('miscarriages', e.target.value)}
                        className="input-field"
                        placeholder="0"
                      />
                    </div>
                  </div>
                </div>
              )}

              {/* –õ–µ–∫–∞—Ä—Å—Ç–≤–∞ –∏ –¥–æ–±–∞–≤–∫–∏ */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –õ–µ–∫–∞—Ä—Å—Ç–≤–∞ –∏ –ø–∏—â–µ–≤—ã–µ –¥–æ–±–∞–≤–∫–∏, –≤–∏—Ç–∞–º–∏–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–∏–º–∞–ª–∏ –∏–ª–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ
                </label>
                <textarea
                  value={formData.medications}
                  onChange={(e) => handleInputChange('medications', e.target.value)}
                  className="input-field"
                  rows={3}
                  placeholder="–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤—Å–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞, –¥–æ–±–∞–≤–∫–∏ –∏ –≤–∏—Ç–∞–º–∏–Ω—ã"
                />
              </div>

              {/* –ó–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–∞–ª–∏–∑–æ–≤ */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –ª—é–±—ã–µ –∞–Ω–∞–ª–∏–∑—ã, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2-3 –º–µ—Å—è—Ü–∞
                </label>
                <div className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-primary-400 transition-colors">
                  <input
                    type="file"
                    multiple
                    accept=".pdf,.jpg,.jpeg,.png,.doc,.docx"
                    onChange={(e) => {
                      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
                      const files = e.target.files;
                      if (files) {
                        // console.log('–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤:', files.length);
                        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
                      }
                    }}
                    className="hidden"
                    id="analyses-upload"
                  />
                  <label htmlFor="analyses-upload" className="cursor-pointer">
                    <div className="space-y-2">
                      <div className="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto">
                        <FileText size={24} className="text-gray-400" />
                      </div>
                      <div>
                        <p className="text-sm font-medium text-gray-700">
                          –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
                        </p>
                        <p className="text-xs text-gray-500">
                          PDF, JPG, PNG, DOC –¥–æ 10 –ú–ë –∫–∞–∂–¥—ã–π
                        </p>
                      </div>
                    </div>
                  </label>
                </div>
                <p className="text-xs text-gray-500 mt-2">
                  * –ê–Ω–∞–ª–∏–∑—ã –ø–æ–º–æ–≥—É—Ç –≤—Ä–∞—á—É —Å–æ—Å—Ç–∞–≤–∏—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                </p>
              </div>
            </div>
          </div>
        );

      default:
        return null;
    }
  };

  return (
    <div className="max-w-4xl mx-auto p-6">
      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
      <div className="mb-8">
        <div className="flex items-center justify-between mb-4">
          <h1 className="text-2xl font-bold text-gray-900">–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∞–Ω–∫–µ—Ç–∞</h1>
          <div className="text-sm text-gray-500">
            –®–∞–≥ {currentStep} –∏–∑ {totalSteps}
          </div>
        </div>
        <div className="w-full bg-gray-200 rounded-full h-2">
          <div 
            className="bg-primary-600 h-2 rounded-full transition-all duration-300"
            style={{ width: `${(currentStep / totalSteps) * 100}%` }}
          />
        </div>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç —à–∞–≥–∞ */}
      <div className="bg-white rounded-2xl p-8 shadow-sm">
        {renderStepContent()}
      </div>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div className="flex justify-between mt-8">
        <button
          onClick={prevStep}
          disabled={currentStep === 1}
          className="btn-secondary flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed"
        >
          <ChevronLeft size={20} />
          <span>–ù–∞–∑–∞–¥</span>
        </button>

        {currentStep < totalSteps ? (
          <button
            onClick={nextStep}
            className="btn-primary flex items-center space-x-2"
          >
            <span>–î–∞–ª–µ–µ</span>
            <ChevronRight size={20} />
          </button>
        ) : (
          <button
            onClick={handleSubmit}
            disabled={isSubmitting}
            className="btn-primary flex items-center space-x-2"
          >
            {isSubmitting ? (
              <>
                <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white"></div>
                <span>–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...</span>
              </>
            ) : (
              <>
                <FileText size={20} />
                <span>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–∫–µ—Ç—É</span>
              </>
            )}
          </button>
        )}
      </div>
    </div>
  );
};

export default SurveyPage; 